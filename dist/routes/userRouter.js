"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const auth_1 = __importDefault(require("../middelware/auth"));
const userController_1 = __importDefault(require("../controller/userController"));
const valid_1 = require("../middelware/valid");
const router = express_1.default.Router();
router.patch('/updateprofile', auth_1.default, valid_1.validUpdateProfile, userController_1.default.updateProfile);
router.patch('/updateprofileimage', auth_1.default, valid_1.validUpdateProfileImage, userController_1.default.updateProfileImage);
router.patch('/updateprofileimage_cover', auth_1.default, valid_1.validUpdateProfileImageCover, userController_1.default.updateProfileCover);
router.patch('/changepassword', auth_1.default, userController_1.default.changePassword);
router.patch('/reset_password', auth_1.default, userController_1.default.resetPassword);
router.patch('/follow-tag', auth_1.default, userController_1.default.followTag);
router.patch('/unfollow-tag', auth_1.default, userController_1.default.unfollowTag);
router.patch('/follow-user', auth_1.default, userController_1.default.followUser);
router.patch('/unfollow-user', auth_1.default, userController_1.default.unfollowUser);
router.patch('/block-user', auth_1.default, userController_1.default.blockUsers);
router.patch('/save-post', auth_1.default, userController_1.default.savePost);
router.patch('/unsave-post', auth_1.default, userController_1.default.unsavePost);
router.patch('/tag-priority', auth_1.default, userController_1.default.tagPriority);
router.patch('/pin-blog', auth_1.default, userController_1.default.pinBlog);
router.patch('/un-pin-blog', auth_1.default, userController_1.default.unpinBlog);
router.get('/profile/:id', userController_1.default.getProfile);
router.get('/blog-by-user/:id/:page', userController_1.default.getBlogByUser);
router.get('/getnotify', auth_1.default, userController_1.default.getnotification);
router.patch('/readingnoti', auth_1.default, userController_1.default.readingNoti);
router.get('/get-blog-saved/:page', auth_1.default, userController_1.default.getListBlogsaved);
router.get('/search-reading-list', auth_1.default, userController_1.default.searchBlogsaved);
router.get('/home-dashbroad/:page', auth_1.default, userController_1.default.getHomeDashbroad);
router.get('/get-follower', auth_1.default, userController_1.default.getListFollower);
router.get('/get-user-myfollow', auth_1.default, userController_1.default.getListUserMyFollow);
router.get('/get-tag-follow', auth_1.default, userController_1.default.getTagFollow);
router.get('/get-blog-pin', auth_1.default, userController_1.default.getListPinblog);
router.get('/get-blog-private', auth_1.default, userController_1.default.getListBlogPrivate);
router.post('/report-user', auth_1.default, userController_1.default.reportUser);
router.post('/report-blog', auth_1.default, userController_1.default.reportBlog);
router.get('/get-count-notifi', auth_1.default, userController_1.default.getCountNotifiUnRead);
exports.default = router;
